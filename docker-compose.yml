
networks:
  boostbiz:
    driver: bridge
    attachable: true
    name: boostbiz

services:
#   postgres:
#     image: postgres:14
#     container_name: postgres
#     networks:
#       - boostbiz
#     ports:
#       - "5433:5432"  # Изменен внешний порт на 5433
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=password
#     volumes:
#       - ./init.sql:/docker-entrypoint-initdb.d/init.sql # при создании запустить инициализациооный файл
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 5s
#       timeout: 5s
#       retries: 5

  # migrate:
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   image: openfga/openfga:latest
  #   container_name: migrate
  #   command: migrate
  #   environment:
  #     - OPENFGA_DATASTORE_ENGINE=postgres
  #     - OPENFGA_DATASTORE_URI=postgres://alex:1000@postgres:5432/fga?sslmode=disable  # Используем имя сервиса postgres
  #   networks:
  #     - boostbiz

  # openfga:
    # depends_on:
    #   migrate:
    #     condition: service_completed_successfully
    # image: openfga/openfga:latest
    # container_name: openfga
    # environment:
    #   - OPENFGA_DATASTORE_ENGINE=postgres
    #   - OPENFGA_DATASTORE_URI=postgres://alex:1000@postgres:5432/fga?sslmode=disable  # Используем имя сервиса postgres
    #   - OPENFGA_LOG_FORMAT=json
    # command: run
    # networks:
    #   - boostbiz
    # ports:
    #   # Needed for the http server
    #   - "8080:8080"
    #   # Needed for the grpc server (if used)
    #   - "8081:8081"
    #   # Needed for the playground (Do not enable in prod!)
    #   - "3000:3000"

  mongo:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: boostbiz1
      MONGO_INITDB_ROOT_PASSWORD: 1000
      MONGO_INITDB_DATABASE: admin
    ports:
      - "27017:27017"
    networks:
      - boostbiz
    volumes:
      - mongo-data:/data/db
  
  # rabbitmq:
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile1
  #   container_name: rabbit_broker
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
  #     - '1883:1883'
  #   networks:
  #     - boostbiz
  #   volumes:
  #     - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
  # rabbitmq:
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile1
  #   container_name: rabbitmq-for-test
  #   environment:
  #     - RABBITMQ_HOST=localhost
  #     - RABBITMQ_PORT=5672
  #     - RABBITMQ_USERNAME=gmt-user
  #     - RABBITMQ_PASSWORD=gmt-password
  #     - RABBITMQ_DEFAULT_USER=gmt-user
  #     - RABBITMQ_DEFAULT_PASS=gmt-password
  #     - RABBITMQ_DEFAULT_VHOST=gmt
  #     - RABBITMQ_HEARTBEAT=10
  #     - RABBITMQ_VHOST=gmt
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
  #     - '1883:1883'
  #   networks:
  #     - boostbiz
  #   volumes:
  #     - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   networks:
  #     - boostbiz
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data

volumes:
  mongo-data:
  redis-data:
